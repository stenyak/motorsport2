format 49
"motorsport" // motorsport
  revision 9
  modified_by 64 "stenyak"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default
  
  cpp_h_dir "motorsport"
  cpp_src_dir "motorsport"
  cpp_namespace "motorsport"
  deploymentview 128024 "deployment"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 129253 "Core"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129253 // Core
      end
    end

    artifact 129381 "Group"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H
${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129381 // Group
      end
    end

    artifact 129154 "Loggable"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H
${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129637 // Loggable
      end
    end

    artifact 128035 "Exception"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H
${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128163 // Exception
      end
    end
  end

  classview 128152 "model"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default
    associated_deployment_view deploymentview_ref 128024 // deployment
    class 128163 "Exception"
      visibility public 
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 128291 "Exception"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 1
	  param inout name "description" explicit_type "string"
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw}: description(description) {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple constructor.
\\param description a \\ref description of the exception. */"
      end

      operation 128547 "~Exception"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	nexceptions 1
	  explicit_exception ""
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      operation 128064 "getDescription"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "const string &"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Returns a \\ref description of the exception. */"
      end

      operation 128419 "what"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "const char *"
	nparams 0
	nexceptions 1
	  explicit_exception "/**/"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Returns a \\ref description of the exception. */"
      end

      attribute 128035 "description"
	private explicit_type "string"
	multiplicity "1"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};"
	java_decl ""
	php_decl ""
	idl_decl ""
	comment "/** Description of the exception. */"
      end

      classrelation 128291 // <realization>
	relation 128291 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128291 // <realization>
	  b parent class_ref 128291 // exception
      end
    end

    class 129637 "Loggable"
      abstract visibility package 
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** By creating a class derived from this, the class acquires the ability to generate detailed logs. */"
      operation 129638 "Loggable"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "string"
	    defaultvalue "\"No name\""
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Loggable constructor.
\\param string a \\ref name that helps identify logs origin. */"
      end

      operation 129510 "~Loggable"
	abstract preserve_cpp_body_indent cpp_virtual protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      operation 129254 "getId"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "const string"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** \\returns a string that helps identify the object in the generated logs. */"
      end

      operation 128163 "setId"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "string"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
      end

      attribute 129253 "id"
	protected explicit_type "string"
	multiplicity "1"
	cpp_decl "    ${description}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	idl_decl ""
	comment "/** A name for the object to be logged. It will help identify where logs came from. */"
      end

      operation 129382 "Loggable"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Default constructor. Should not be used. */"
      end

      classrelation 128419 // <dependency>
	relation 128419 -_->
	  a package
	    cpp default "#include in source"
	    classrelation_ref 128419 // <dependency>
	  b parent class_ref 128163 // Exception
      end
    end

    class 129253 "Core"
      visibility package 
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** The main component of Motorsport. In theory, several can be created and used simultaneous and independently. However, usually only one is used in a program. */"
      operation 129253 "Core"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param inout name "world" type class_ref 129381 // Group
	cpp_decl "    ${description}${inline}${name}${(}shared_ptr< ${t0} > ${p0}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}shared_ptr< ${t0} > ${p0}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Core constructor.
\\param world the root \\ref Group where all groups will be held. */"
      end

      operation 130278 "Core"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Default constructor. Creates a Group named \"world\" as root group.
\\sa Group */"
      end

      operation 129381 "~Core"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      operation 128320 "getWorld"
	preserve_cpp_body_indent public explicit_return_type "shared_ptr<Group>"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Returns the world \\ref Group of this core. */"
      end

      classrelation 129253 // world (<directional aggregation>)
	relation 129253 o-->
	  stereotype "shared_ptr"
	  a role_name "world" multiplicity "1" protected
	    comment "/** Root group of the simulated world. */"
	    cpp default "    ${description}${static}${mutable}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 129253 // world (<directional aggregation>)
	  b parent class_ref 129381 // Group
      end

      classrelation 128064 // <dependency>
	relation 128064 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 128064 // <dependency>
	  b parent class_ref 128163 // Exception
      end

    end

    class 129381 "Group"
      visibility package 
      nactuals 1
      actual class class_ref 128035 // enable_shared_from_this
        rank 0 value class_ref 129381 // Group
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      associated_diagram classdiagram_ref 128024 // class diagram
      comment "/** A Group is a class that can hold other \\ref groups inside it. Each group represents a concept in the Motorsport virtual world, for example a car, a track, a pitbox, a person, etc. Many classes are derived from this. */"
      operation 129766 "Group"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "id" explicit_type "string"
	cpp_decl "    ${description}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${volatile}${throw}: Loggable(id) {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple constructor.
\\param name the name that will be used in its logs. */"
      end

      operation 129894 "~Group"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      operation 128803 "setId"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "id" explicit_type "string"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
      end

      operation 130662 "getGlobalId"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "const string"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** \\returns a string that helps identify the object in the generated logs. */"
      end

      operation 130150 "setParent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 129381 // Group
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Changes the \\ref parent. */"
      end

      operation 129509 "addGroup"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "group" type class_ref 129381 // Group
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Moves a group to the \\ref groups list of this group. The group gets its parent group changed accordingly. */"
      end

      operation 128324 "removeGroup"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "group" type class_ref 129381 // Group
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}shared_ptr< ${t0} > ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Moves a group to the \\ref groups list of this group. The group gets its parent group changed accordingly. */"
      end

      classrelation 129381 // groups (<directional aggregation>)
	relation 129381 o-->
	  stereotype "vector_shared_ptr"
	  a role_name "groups" multiplicity "*" protected
	    comment "/** Children groups. For example, a car has 4 wheels and a chassis. Therefore, a \"car\" group would contain 5 groups. */"
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${stereotype}<${type}> > ${name}${value};
"
	    classrelation_ref 129381 // groups (<directional aggregation>)
	  b parent class_ref 129381 // Group
      end

      classrelation 129509 // parent (<directional aggregation>)
	relation 129509 o-->
	  stereotype "weak_ptr"
	  a role_name "parent" multiplicity "1" protected
	    comment "/** Refers to the group that contains this. Each group can only have one parent. The root group parent is zero or null.
\\sa addGroup
\\sa setParent */"
	    cpp default "    ${description}${static}${mutable}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 129509 // parent (<directional aggregation>)
	  b parent class_ref 129381 // Group
      end

      operation 130022 "Group"
	preserve_cpp_body_indent private explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw}: Loggable(\"\") {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Default constructor, should not be used. */"
      end

      classrelation 129154 // <realization>
	relation 129154 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129154 // <realization>
	  b parent class_ref 129637 // Loggable
      end

      classrelation 128163 // <realization>
	relation 128163 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128163 // <realization>
	  b parent class_ref 128035 // enable_shared_from_this
      end

      classrelation 128547 // <dependency>
	relation 128547 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 128547 // <dependency>
	  b parent class_ref 128163 // Exception
      end
    end
  end
end
