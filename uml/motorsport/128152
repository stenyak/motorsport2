format 49
"motorsport-sim" // motorsport-sim
  revision 16
  modified_by 3 "stenyak"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default
  
  cpp_h_dir "motorsport-sim"
  cpp_src_dir "motorsport-sim"
  cpp_namespace "motorsport_sim"
  deploymentview 128152 "deployment"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 129254 "Sim"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H
${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
#include <motorsport/Group.h>
using namespace motorsport;
#include <iostream.h>
using namespace std;
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129254 // Sim
      end
    end

    artifact 128014 "Graphics"
      stereotype "source"
      cpp_h "/** Copyright (C) 2008 Motorsport Project contributors (see license.txt) */
#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H
${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128069 // Graphics
      end
    end
  end

  classview 128280 "model"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_infonote default shadow default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default draw_all_relations default shadow default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default
    associated_deployment_view deploymentview_ref 128152 // deployment
    class 128171 "ImpExp"
      visibility package 
      cpp_external cpp_decl "${name}
#include <OgreCollada.h>
using namespace OgreCollada;"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** Collada importer/exporter, from OgreCollada library. */"
    end

    class 128043 "ExampleFrameListener"
      visibility package 
      cpp_external cpp_decl "${name}
#include <motorsport-sim/GraphicsHelper.h>
"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** Helper for Ogre library. */"
    end

    class 128324 "Root"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Ogre.h>
using namespace Ogre;"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** From Ogre library. */"
    end

    class 128196 "RenderWindow"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Ogre.h>
using namespace Ogre;"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** From Ogre library. */"
    end

    class 128068 "SceneManager"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Ogre.h>
using namespace Ogre;"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** From Ogre library. */"
    end

    class 128003 "Node"
      visibility package 
      cpp_external cpp_decl "${name}
#include <Ogre.h>
using namespace Ogre;"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** From Ogre library. */"
    end

    class 128069 "Graphics"
      abstract visibility package 
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** Implementation of graphics engine. Takes care of displaying the virtual world on screen. */"
      operation 128453 "Graphics"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "frequency" explicit_type "float"
	cpp_decl "    ${description}${inline}${name}${(}${t0} ${p0}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${t0} ${p0}${)}${volatile}${throw}: Threadable(frequency), mFrameListener(0), mRoot(0), mWindow(0) {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple constructor. */"
      end

      operation 128581 "~Graphics"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      operation 128043 "loadCollada"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "string"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Loads the desired dae file (.dae) with pathname relative to Motorsport data directory. */"
      end

      operation 128131 "loadResources"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "string"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Loads the desired ogre resources file (.cfg) with pathname relative to Motorsport data directory. */"
      end

      operation 128709 "main"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Loop method, renders things to screen. */"
      end

      operation 128003 "getNodeListString"
	preserve_cpp_body_indent public explicit_return_type "string"
	nparams 2
	  param inout name "node" type class_ref 128003 // Node
	  param inout name "level" explicit_type "int"
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0} = NULL, ${t1} ${p1} = 0${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}const ${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Retrieves a simple space separated list of all nodes existing in the Ogre scene tree, in no particular order.
\\param node the Ogre node that will be recursively inspected and printed to string. If NULL or not specified, the Ogre root scene node will be used.
\\param level the level of indentation, that is, the depth of the node. only has consequences on the output format (indentation). If 0 or not specified, the first node will have no levels indentation (but its children will, if present).
\\returns a string with 4-space indentated,new-line separated node names.*/"
      end

      classrelation 128171 // mFrameListener (<directional composition>)
	relation 128171 *-->
	  a role_name "mFrameListener" multiplicity "1" private
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${type}* ${name}${value};"
	    classrelation_ref 128171 // mFrameListener (<directional composition>)
	  b parent class_ref 128043 // ExampleFrameListener
      end

      classrelation 129476 // mSceneMgr (<directional composition>)
	relation 129476 *-->
	  a role_name "mSceneMgr" multiplicity "1" private
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${type}* ${name}${value};"
	    classrelation_ref 129476 // mSceneMgr (<directional composition>)
	  b parent class_ref 128068 // SceneManager
      end

      classrelation 129732 // mRoot (<directional composition>)
	relation 129732 *-->
	  a role_name "mRoot" multiplicity "1" private
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${type}* ${name}${value};"
	    classrelation_ref 129732 // mRoot (<directional composition>)
	  b parent class_ref 128324 // Root
      end

      classrelation 129604 // mWindow (<directional composition>)
	relation 129604 *-->
	  a role_name "mWindow" multiplicity "1" private
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${type}* ${name}${value};"
	    classrelation_ref 129604 // mWindow (<directional composition>)
	  b parent class_ref 128196 // RenderWindow
      end

      classrelation 128003 // impExp (<directional composition>)
	relation 128003 *-->
	  a role_name "impExp" multiplicity "1" private
	    cpp default "    ${description}${static}${mutable}${volatile}${const}${type}* ${name}${value};"
	    classrelation_ref 128003 // impExp (<directional composition>)
	  b parent class_ref 128171 // ImpExp
      end

      classrelation 128197 // <realization>
	relation 128197 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128197 // <realization>
	  b parent class_ref 128213 // Threadable
      end

      classrelation 128299 // <dependency>
	relation 128299 -_->
	  a package
	    cpp default "#include in source"
	    classrelation_ref 128299 // <dependency>
	  b parent class_ref 128171 // ImpExp
      end

      classrelation 130133 // <dependency>
	relation 130005 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 130133 // <dependency>
	  b parent class_ref 128121 // Os
      end

    end

    class 129254 "Sim"
      visibility package 
      cpp_decl "${description}
${template}class ${name}${inherit} {
${members}};
${inlines}"
      java_decl ""
      php_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/** Motorsport Simulation main class. */"
      operation 130406 "Sim"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Default constructor. Instantiates a Motorsport \\ref Core amongst other things.  */"
      end

      operation 130534 "~Sim"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type ""
	nparams 0
	cpp_decl "    ${description}${inline}${virtual}${name}${(}${)}${volatile}${throw};"
	cpp_def "${description}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
	comment "/** Simple destructor. */"
      end

      classrelation 128068 // core (<directional aggregation>)
	relation 128068 o-->
	  stereotype "shared_ptr"
	  a role_name "core" multiplicity "1" protected
	    comment "/** The Motorsport core used for this simulation. */"
	    cpp default "    ${description}${static}${mutable}${volatile}${stereotype}<${type}> ${name}${value};"
	    classrelation_ref 128068 // core (<directional aggregation>)
	  b parent class_ref 129253 // Core
      end

      operation 128077 "getCore"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "shared_ptr<motorsport::Core>"
	nparams 0
	cpp_decl "    ${description}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};"
	cpp_def "${description}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}"
	preserve_java_body_indent 
	preserve_php_body_indent 
	
      end
    end
  end
end
