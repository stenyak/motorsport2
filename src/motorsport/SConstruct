def cfgAppend(cfg, prefix):
    r = cfg.copy()
    for key in cfg:
        try:
            #join strings, append lists
            if type(cfg[key]) == type(""):
                r[key] = prefix[key] + cfg[key]
            else:
                r[key] = prefix[key] + cfg[key]
        except:
            #key prolly doesn't exist
            continue
    return r

def cfgPrint(cfg, prefix="    "):
    for key in cfg:
        print prefix + key + " = ", cfg[key]

def cfgBuild(cfg, type):
    env = Environment(CCFLAGS = cfg["ccflags"])
    obj = 0;
    usr = "..\\..\\usr\\"
    if type == "StaticLibrary":
        obj = env.StaticLibrary(target=cfg["name"], source=cfg["sources"], CPPPATH=cfg["includePaths"], LIBPATH=cfg["libPaths"], LIBS=cfg["libs"])
        env.Install(usr+"lib", obj)
    if type == "SharedLibrary":
        obj = env.SharedLibrary(target=cfg["name"], source=cfg["sources"], CPPPATH=cfg["includePaths"], LIBPATH=cfg["libPaths"], LIBS=cfg["libs"])
        env.Install(usr+"lib", obj)
    if type == "Program":
        obj = env.Program      (target=cfg["name"], source=cfg["sources"], CPPPATH=cfg["includePaths"], LIBPATH=cfg["libPaths"], LIBS=cfg["libs"])
        env.Install(usr+"bin", obj)
    #env.Install(installPath, obj)
    return obj

def build (cfgs, type, cfgName):
    r = {}
    r["cfg"] = cfgAppend(cfgs["default"], cfgs[cfgName])
    r["obj"] = cfgBuild(r["cfg"], type)
    return r

cfgMosp = {
    "default": {
        "name": "motorsport"
        ,"includePaths": Split("/usr/include/boost-1_33_1")
        ,"libPaths": Split(" ")
        ,"libs": Split("boost_program_options-gcc-mt-s")
        ,"sources": Split("main.cpp motorsport.cpp")
        ,"ccflags": " -Wall -Wextra"
        ,"installPath": "lib"
        }
    ,"debug": {
        "name":"d"
        ,"ccflags": "-g"
        }
    ,"release": {
        }
    }
#mosp = build(cfgMosp, "StaticLibrary", "debug");
#mosp = build(cfgMosp, "SharedLibrary", "debug");
mosp = build(cfgMosp, "Program", "debug");
#cfgPrint(mosp["cfg"], "mosp.")
"""
cfgTests = {
    "default": {
        "name": "tests"
        ,"includePaths": Split("../../deps/testsoon/include /usr/include/boost-1_33_1")
        ,"libPaths": Split(".")
        ,"libs": [log["obj"], Split(" ")]
        ,"sources": Split("tests.cpp")
        ,"ccflags": " -Wall"
        ,"installPath": "lib"
        }
    ,"debug": {
        "name":"d"
        ,"ccflags": "-g "
        }
    ,"release": {
        }
    }
tests = build(cfgTests, "Program", "debug");
#cfgPrint(tests["cfg"], "tests.")
"""